import{_ as i,c as a,a as e,o as n}from"./app-ykAvmomI.js";const t={};function l(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<p>registry 镜像仓库：https://hub.docker.com/_/registry</p><p>distribution 官网：https://distribution.github.io/distribution/</p><p>因为一些原因，在国内访问 <code>registry.k8s.io</code>、<code>quay.io</code> 等镜像源非常困难，所以当有一台中国大陆以外的服务器时，可以利用 registry 注册表作为拉取缓存。</p><blockquote><p>官网文档：https://distribution.github.io/distribution/recipes/mirror/</p><p><strong>Solution</strong></p><p>The Registry can be configured as a pull through cache. In this mode a Registry responds to all normal docker pull requests but stores all content locally.</p></blockquote><h2 id="一、环境准备" tabindex="-1"><a class="header-anchor" href="#一、环境准备"><span>一、环境准备</span></a></h2><p>开始之前需要准备的一些必需品</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 一台可以公网访问的服务器（服务器需要具备访问 registry.k8s.io 的能力）</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> （可选）一个可以访问的二级域名</label></li></ul><h2 id="二、搭建服务" tabindex="-1"><a class="header-anchor" href="#二、搭建服务"><span>二、搭建服务</span></a></h2><h3 id="_1-功能实现" tabindex="-1"><a class="header-anchor" href="#_1-功能实现"><span>1. 功能实现</span></a></h3><p>首先利用 docker 进行基本功能实现，后续优化。</p><h4 id="a-拉取-registry-镜像" tabindex="-1"><a class="header-anchor" href="#a-拉取-registry-镜像"><span>a. 拉取 registry 镜像</span></a></h4><p>使用 <code>docker pull</code> 拉取 registry:2 镜像</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> registry:2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="b-创建-registry-容器" tabindex="-1"><a class="header-anchor" href="#b-创建-registry-容器"><span>b. 创建 registry 容器</span></a></h4><p>使用 <code>docker run</code> 创建容器，映射 5000 端口，名称为 registry，使用镜像 registry:2</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5000:5000</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> registry</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> registry:2</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -e</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> REGISTRY_PROXY_REMOTEURL=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://registry.k8s.io</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 通过 -e 参数设置变量 REGISTRY_PROXY_REMOTEURL，将 registry.k8s.io 作为缓存服务的上游</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以通过设置配置文件实现：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">proxy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  remoteurl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://registry-1.docker.io</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  username</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  password</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">password</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ttl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 168h</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Docker 地址为 https://registry-1.docker.io, 按需配置。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># K8s: </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Quay:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-验证服务的可用性" tabindex="-1"><a class="header-anchor" href="#c-验证服务的可用性"><span>c. 验证服务的可用性</span></a></h4><p>此时可以跳转到 <a href="#%E4%B8%89%E3%80%81%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF">第三节</a> 配置客户端并且在确保网络连通性正常后进行验证。</p><p>验证完成后，查看 registry 容器官网，无法镜像另外一个域。所以当需要同时代理缓存 <code>docker.io</code>、<code>quay.io</code> 时，就需要修改映射的端口和上游地址，启动新容器，对加速镜像分别进行缓存。</p><h2 id="三、配置客户端" tabindex="-1"><a class="header-anchor" href="#三、配置客户端"><span>三、配置客户端</span></a></h2><h3 id="_1-配置-docker-镜像加速" tabindex="-1"><a class="header-anchor" href="#_1-配置-docker-镜像加速"><span>1. 配置 Docker 镜像加速</span></a></h3><p>针对 Linux 系统的配置方法。docker 仅支持对 docker.io 进行加速。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mkdir</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/docker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tee</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/docker/daemon.json</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;-</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;registry-mirrors&quot;: [&quot;https://[镜像加速地址]&quot;]</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">}</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 registry 加速地址配置了身份认证：</p><p>（1）通过 <code>docker login &lt;PROXY.DOMAIN.COM&gt;</code> 命令登录，登录成功之后，会在对应的 $HOME 目录下生成 <code>.docker/config.json</code> 配置文件</p><p>（2）修改配置文件，在 <code>auths</code> 配置块中添加官方地址 <code>https://index.docker.io/v1/</code>，<code>auth</code> 哈希值与代理镜像地址的 <code>auth</code> 一致，重启 Docker 服务，即可直接通过 <code>docker pull</code> 拉取镜像。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">auths</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">                &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">https://index.docker.io/v1/</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">                        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">auth</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&lt;BASE64[USER:PASSWORD]&gt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">                },</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">                &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">PROXY.DOMAIN.COM</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">                        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">auth</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&lt;BASE64[USER:PASSWORD]&gt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">                }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置-containerd-镜像加速" tabindex="-1"><a class="header-anchor" href="#_2-配置-containerd-镜像加速"><span>2. 配置 Containerd 镜像加速</span></a></h3><h4 id="a-指定配置目录" tabindex="-1"><a class="header-anchor" href="#a-指定配置目录"><span>a. 指定配置目录</span></a></h4><p>参考文档：https://github.com/containerd/containerd/blob/main/docs/hosts.md</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sed</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">s#config_path.*#config_path = &quot;/etc/containerd/conf.d&quot;#g</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/containerd/config.toml</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -i</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 配置 registry.k8s.io、quay.io 同理</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/containerd/conf.d/docker.io</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/containerd/conf.d/docker.io/hosts.toml</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> EOF</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">server = &quot;https://docker.io&quot;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">[host.&quot;https://[镜像加速地址]&quot;]</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> containerd.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改配置文件后，需要重启 containerd 服务。</p><h4 id="b-配置基本身份验证" tabindex="-1"><a class="header-anchor" href="#b-配置基本身份验证"><span>b. 配置基本身份验证</span></a></h4><p>当开启了身份验证后，还需要针对客户端进行一些必要的配置。</p><p><strong>修改配置文件</strong>：</p><p>参考文档：https://github.com/containerd/containerd/blob/main/docs/cri/registry.md</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>version = 2</span></span>
<span class="line"><span>[plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry]</span></span>
<span class="line"><span>  [plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.configs]</span></span>
<span class="line"><span>    [plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.configs.&quot;gcr.io&quot;.auth]</span></span>
<span class="line"><span>      username = &quot;_json_key&quot;</span></span>
<span class="line"><span>      password = &#39;paste output from jq&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 containerd 服务</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> containerd.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>使用命令行方式进行验证</strong>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用 crictl 拉取镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">crictl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --auth</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> AUTH_STRING</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> registry.k8s.io/pause:3.6</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">crictl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --creds</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> USERNAME[:PASSWORD]</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> registry.k8s.io/pause:3.6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用 ctr 拉取镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ctr</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> images</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --user</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> USERNAME[:PASSWORD]</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --hosts-dir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/containerd/certs.d/</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> registry.k8s.io/pause:3.6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上验证完成后，就可以轻松获取镜像了。</p>`,44)]))}const p=i(t,[["render",l]]),d=JSON.parse('{"path":"/article/docker/registry/","title":"通过 registry:2 加速国外镜像源","lang":"zh-CN","frontmatter":{"title":"通过 registry:2 加速国外镜像源","createTime":"2023/11/28 12:06:25","permalink":"/article/docker/registry/","tags":["Containerd","Docker","Kubernetes","Registry"],"description":"registry 镜像仓库：https://hub.docker.com/_/registry distribution 官网：https://distribution.github.io/distribution/ 因为一些原因，在国内访问 registry.k8s.io、quay.io 等镜像源非常困难，所以当有一台中国大陆以外的服务器时，可以利用...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通过 registry:2 加速国外镜像源\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-01T11:40:06.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.lihaicheng.com/article/docker/registry/"}],["meta",{"property":"og:site_name","content":"白羊"}],["meta",{"property":"og:title","content":"通过 registry:2 加速国外镜像源"}],["meta",{"property":"og:description","content":"registry 镜像仓库：https://hub.docker.com/_/registry distribution 官网：https://distribution.github.io/distribution/ 因为一些原因，在国内访问 registry.k8s.io、quay.io 等镜像源非常困难，所以当有一台中国大陆以外的服务器时，可以利用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-01T11:40:06.000Z"}],["meta",{"property":"article:tag","content":"Registry"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:tag","content":"Containerd"}],["meta",{"property":"article:modified_time","content":"2025-05-01T11:40:06.000Z"}]]},"readingTime":{"minutes":2.79,"words":837},"git":{"createdTime":1746099606000,"updatedTime":1746099606000,"contributors":[{"name":"lihaicheng","username":"lihaicheng","email":"lihaicheng.email@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/lihaicheng?v=4","url":"https://github.com/lihaicheng"}]},"autoDesc":true,"filePathRelative":"Docker/registry.md","headers":[],"categoryList":[{"id":"c5fd21","sort":10009,"name":"Docker"}]}');export{p as comp,d as data};
